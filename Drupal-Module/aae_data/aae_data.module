<?php

/** @function hook_cron()
*
* Cronjob, der von Drupal automatisch aufgerufen wird.
* TODO: Update der LOData.js Maps-Koordinaten-Datei
*/

function aae_data_cron() {
  //....
}

/**
 * @function hook_menu()
 *
 * Verlinkt URL-Pfade auf die entsprechende Funktion.
 */

function aae_data_menu() {
  $items = array();
  //Menuitem "Akteure"
  $items['Akteure'] = array(
    'title' => 'Akteure',
    'page callback' => 'akteure_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );

  //Menuitem "Akteurformular"
  $items['Akteurformular'] = array(
    'title' => 'Akteurformular',
    'page callback' => 'akteurformular_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );

  //Menuitem "Akteurprofil"
  $items['Akteurprofil/%'] = array(
    'title' => '',
    'page callback' => 'akteurprofil_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );

  //Menuitem "Akteuredit"
  $items['Akteuredit/%'] = array(
    'title' => '',
    'page callback' => 'akteuredit_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );

  //Menuitem "Akteurloeschen"
  $items['Akteurloeschen/%'] = array(
    'title' => '',
    'page callback' => 'akteurloeschen_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );

  //Menuitem "Events"
  $items['Events'] = array(
    'title' => 'Events',
    'page callback' => 'events_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );

  //Menuitem "Eventprofil"
  $items['Eventprofil/%'] = array(
    'title' => '',
    'page callback' => 'eventprofil_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );

  //Menuitem "Eventloeschen"
  $items['Eventloeschen/%'] = array(
    'title' => '',
    'page callback' => 'eventloeschen_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );

  //Menuitem "Eventedit"
  $items['Eventedit/%'] = array(
    'title' => '',
    'page callback' => 'eventedit_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );

  //Menuitem "Eventformular"
  $items['Eventformular'] = array(
    'title' => 'Eventformular',
    'page callback' => 'eventformular_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );
/*-----------*/
  $items['Kontakt'] = array(
    'title' => t('Kontaktformular'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('aae_data_kontaktform'),
    'access arguments' => array('access content'),
    'access callback' => TRUE,
    'description' => t('Kontaktformular'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'forms/kontaktformular.inc',
  );
/*-----------------*/

  return $items;
}
/*---------*/
/**
 * Implementation of hook_mail().
 * 
 * A very simple hook_mail() implementation, for module "mymodule".
 * This implementation expects to receive a $body, $subject, and $headers 
 * inside the $params sent from drupal_mail(), rather than construct
 * those here in the hook.
 * @see drupal_mail()
 */
function aae_data_mail($key, &$message, $params) {
  if (isset($params['subject'])) {
    $message['subject'] = $params['subject'];
  } 
  if (isset($params['body'])) {
    $message['body'][] = $params['body']; 
  }
  if (isset($params['headers']) && is_array($params['headers'])) {   
    $message['headers'] += $params['headers'];
  }
  
  // You should really have hook_mail() doing most of the formatting, 
  // rather than pass in a complete $body or a $subject from drupal_mail().  
  // To accomplish that, you'd branch this formatting based on the value of
  // $key sent with drupal_mail(), and using code like this:
  // switch ($key) {
  //  case 'key1':
  //    // do something specific for mails of type key1
  //    break;      
  //  case 'key2':
  //    // do something specific for mails of type key2
  //    break;
  // }
  
  // That's it - You don't do anything in your hook_mail() to actually
  // send the mail, that is taken care of by the mail system automatically. 
}
/*---------*/


/**
 * Builds page for Akteurliste
 */
function akteure_page() {
  $modulePath = drupal_get_path('module', 'aae_data');
  include $modulePath . '/akteure.php';

  $path = current_path();
  $path_alias = drupal_lookup_path('alias',$path);

  return $profileHTML;
}
/**
 * Builds page for Akteurformular
 */
function akteurformular_page() {
  $modulePath = drupal_get_path('module', 'aae_data');
  include $modulePath . '/akteurformular.php';

  $path = current_path();
  $path_alias = drupal_lookup_path('alias',$path);

  return $profileHTML;
}
/**
 * Builds page for Akteurprofil
 */
function akteurprofil_page($aid=0) {
  $modulePath = drupal_get_path('module', 'aae_data');
  include $modulePath . '/akteurprofil.php';

  $path = current_path();
  $path_alias = drupal_lookup_path('alias',$path);

  return $profileHTML;
}
/**
 * Builds page for Akteuredit
 */
function akteuredit_page($aid=0) {
  $modulePath = drupal_get_path('module', 'aae_data');
  include $modulePath . '/akteuredit.php';

  $path = current_path();
  $path_alias = drupal_lookup_path('alias',$path);

  return $profileHTML;
}
/**
 * Builds page for Eventloeschen
 */
function akteurloeschen_page($eid=0) {
  $modulePath = drupal_get_path('module', 'aae_data');
  include $modulePath . '/akteurloeschen.php';

  $path = current_path();
  $path_alias = drupal_lookup_path('alias',$path);

  return $profileHTML;
}
/**
 * Builds page for Events
 */
function events_page() {
  $modulePath = drupal_get_path('module', 'aae_data');
  include $modulePath . '/events.php';

  $path = current_path();
  $path_alias = drupal_lookup_path('alias',$path);

  return $profileHTML;
}
/**
 * Builds page for Eventprofil
 */
function eventprofil_page($eid=0) {
  $modulePath = drupal_get_path('module', 'aae_data');
  include $modulePath . '/eventprofil.php';

  $path = current_path();
  $path_alias = drupal_lookup_path('alias',$path);

  return $profileHTML;
}
/**
 * Builds page for Eventloeschen
 */
function eventloeschen_page($eid=0) {
  $modulePath = drupal_get_path('module', 'aae_data');
  include $modulePath . '/eventloeschen.php';

  $path = current_path();
  $path_alias = drupal_lookup_path('alias',$path);

  return $profileHTML;
}
/**
 * Builds page for Eventedit
 */
function eventedit_page($aid=0) {
  $modulePath = drupal_get_path('module', 'aae_data');
  include $modulePath . '/eventedit.php';

  $path = current_path();
  $path_alias = drupal_lookup_path('alias',$path);

  return $profileHTML;
}
/**
 * Builds page for Eventformular
 */
function eventformular_page() {
  $modulePath = drupal_get_path('module', 'aae_data');
  include $modulePath . '/eventformular.php';

  $path = current_path();
  $path_alias = drupal_lookup_path('alias',$path);

  return $profileHTML;
}
/**
 * Funktion zum Einlesen aller Stadtteile
 */
function insert_bezirke() {
  $bezirke = array('Zentrum (Mitte)', 'Zentrum-Ost (Mitte)', 'Zentrum-Südost (Mitte)', 'Seeburgviertel (Mitte)', 'Zentrum-Süd (Mitte)', 'Musikviertel (Mitte)',  'Zentrum-West (Mitte)', 'Bachviertel (Mitte)', 'Zentrum-Nordwest (Mitte)', 'Waldstraßenviertel (Mitte)', 'Zentrum-Nord (Mitte)', 'Schönefeld-Abtnaundorf (Nordost)', 'Schönefeld-Ost (Nordost)', 'Schönefeld (Nordost)', 'Mockau-Süd (Nordost)', 'Mockau-Nord (Nordost)', 'Mockau (Nordost)', 'Thekla (Nordost)', 'Plaußig-Portitz (Nordost)', 'Neustadt-Neuschönefeld (Ost)', 'Volkmarsdorf (Ost)', 'Anger-Crottendorf (Ost)', 'Sellerhausen-Stünz (Ost)', 'Paunsdorf (Ost)', 'Heiterblick (Ost)', 'Mölkau (Ost)', 'Engelsdorf (Ost)', 'Baalsdorf (Ost)', 'Althen-Kleinpösna (Ost)', 'Reudnitz-Thonberg (Südost)', 'Stötteritz (Südost)', 'Probstheida (Südost)', 'Meusdorf (Südost)', 'Liebertwolkwitz (Südost)', 'Holzhausen (Südost)', 'Südvorstadt (Süd)', 'Connewitz (Süd)', 'Marienbrunn (Süd)', 'Lößnig (Süd)', 'Dölitz-Dösen (Süd)', 'Schleußig (Südwest)', 'Plagwitz (Südwest)', 'Kleinzschocher (Südwest)', 'Großzschocher (Südwest)', 'Knautkleeberg-Knauthain (Südwest)', 'Hartmannsdorf-Knautnaundorf (Südwest)', 'Schönau (West)', 'Grünau-Ost (West)', 'Grünau-Mitte (West)', 'Grünau-Siedlung (West)', 'Lausen-Grünau (West)', 'Grünau-Nord (West)', 'Grünau (West)', 'Miltitz (West)', 'Lindenau (Alt-West)', 'Altlindenau (Alt-West)', 'Neulindenau (Alt-West)', 'Leutzsch (Alt-West)', 'Böhlitz-Ehrenberg (Alt-West)', 'Burghausen-Rückmarsdorf (Alt-West)', 'Möckern (Nordwest)', 'Wahren (Nordwest)', 'Lützschena-Stahmeln (Nordwest)', 'Lindenthal (Nordwest)', 'Gohlis-Süd (Nord)', 'Gohlis-Mitte (Nord)', 'Gohlis-Nord (Nord)', 'Gohlis (Nord)', 'Eutritzsch (Nord)', 'Seehausen (Nord)', 'Wiederitzsch (Nord)');
  $count = count($bezirke);
  $i = 0;
  while ($i < $count) {
	$insert_bezirke = db_insert("aae_data_bezirke")
      ->fields(array(
        'bezirksname' => $bezirke[$i],
	  ))
	  ->execute();
	$i = $i+1;
  }
  return $insert_bezirke;
}
